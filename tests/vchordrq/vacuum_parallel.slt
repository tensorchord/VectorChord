statement ok
SET enable_seqscan = off;

statement ok
CREATE TABLE t (val vector(3));

statement ok
INSERT INTO t (val) SELECT ARRAY[random(), random(), random()]::real[] FROM generate_series(1, 1000);

# statement ok
# SET vchordrq.max_parallel_vacuum_workers = 32;

statement ok
SET min_parallel_index_scan_size = 1;

statement ok
CREATE INDEX ON t USING vchordrq (val vector_l2_ops);

statement ok
CREATE INDEX ON t USING vchordrq (val vector_l2_ops)
WITH (options = $$ build.internal.lists = [31] $$);

statement ok
CREATE INDEX ON t USING vchordrq (val vector_l2_ops)
WITH (options = $$ build.internal.lists = [33] $$);

statement ok
CREATE INDEX ON t USING vchordrq (val vector_l2_ops)
WITH (options = $$ build.internal.lists = [67] $$);

statement ok
VACUUM (PARALLEL 8) t;

statement ok
INSERT INTO t (val) SELECT ARRAY[random(), random(), random()]::real[] FROM generate_series(1, 1000);

statement ok
VACUUM (PARALLEL 8) t;

statement ok
DELETE FROM t WHERE vector_norm(val) > 0.334;

statement ok
VACUUM (PARALLEL 8) t;

statement ok
DELETE FROM t WHERE vector_norm(val) > 0.334;

statement ok
INSERT INTO t (val) SELECT ARRAY[random(), random(), random()]::real[] FROM generate_series(1, 1000);

statement ok
VACUUM (PARALLEL 8) t;

statement ok
INSERT INTO t (val) SELECT ARRAY[random(), random(), random()]::real[] FROM generate_series(1, 1000);

statement ok
DELETE FROM t WHERE vector_norm(val) < 0.667;

statement ok
VACUUM (PARALLEL 8) t;

statement ok
DROP TABLE t;
